services:
  mongodb:
    image: mongo:latest
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGO_DB_NAME=files
    volumes:
      - mongodb_data:/data/db
    ports:
      - 27027:27017
    command: mongod --logpath=/dev/null # --quiet

  minio:
    image: minio/minio
    volumes:
      - minio_files:/data
    ports:
      - 9001:9000
      - 9002:9001
    environment:
      MINIO_ROOT_USER: minioaccesskey
      MINIO_ROOT_PASSWORD: miniosecretkey
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 30s
      timeout: 20s
      retries: 3

  setup-minio:
    image: alpine
    depends_on:
      minio:
        condition: service_started
    volumes:
      - ./create-bucket.sh:/create-bucket.sh
    entrypoint: [ ]
    command: /bin/sh /create-bucket.sh

  redis:
    image: redis:7.2-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping", "-a", "something" ]
      interval: 3s
      timeout: 1s
      retries: 5
    ports:
      - 127.0.0.1:6379:6379

  app:
    build:
      context: .
    ports:
      - '6011:6011'
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/files
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=minioaccesskey
      - MINIO_SECRET_KEY=miniosecretkey
      - MINIO_BUCKET_NAME=mybucket
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=something
    depends_on:
      - mongodb
      - minio
      - redis

volumes:
  mongodb_data:
  minio_files:
  redis_data:
